"""
Задача 26:
Напишите программу, которая на вход принимает два числа A и B,
и возводит число А в целую степень B с помощью рекурсии.

*Пример:*

A = 3; B = 5 -> 243 (3⁵)
    A = 2; B = 3 -> 8
"""


def nums_input(count):
    try:
        num = float(input(f'Введите число {count}: '))
    except ValueError:
        print('! Вы ввели не число ! Повторите ввод.')
        return nums_input(count)
    return num


def pow_a_b(num, pow_num):
    if pow_num == 0:  # указываем порог в виде "0" - т.к любое число^0 = 1
        return 1

    if pow_num < 0:  # проверка на отрицательную степень
        if num == 0:  # проверка на ноль
            print(
                'Для отрицательной степени, число "а" должно быть не равно "0"')
            return
        else:
            return num * pow_a_b(1 / num, abs(pow_num - 1))
    else:
        return num * pow_a_b(num, pow_num - 1)


a = nums_input('"a" для возведения в степень')
b = nums_input('"b" - степень числа "a"')

print(f'Число "{a}" в степени "{b}" -> {pow_a_b(a, b)}')

"""
сначала проверку на отрицательную степень делал в основном коде (не в рекурсии):
-----
if b < 0:
    if a == 0:
        print('Для отрицательной степени, число "а" должно быть не равно "0"')
    else:
        print(f'Число "{a}" в степени "{b}" -> {1 / pow_a_b(a, b)}')
else:
    print(f'Число "{a}" в степени "{b}" -> {pow_a_b(a, b)}')
-----
но ввиду того, что мы возведение в степень "упаковали" в функцию - все проверки
прописал в функции...
Есть сомнение - в части эффективности работы рекурсии в данном случае - т.к при
рекурсии, функция каждый раз будет проверять ранее провереную отрицательную степень..
"""
