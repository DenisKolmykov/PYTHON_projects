"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def nums_input():
    try:
        num = int(input(f'Введите число: '))
    except ValueError:
        print('! Вы ввели не число или не целое число ! Повторите ввод.\n')
        return nums_input()
    return abs(num)


def disassemble_num(num, even_count=0, odd_count=0):
    if num == 0:
        return even_count, odd_count

    if num % 10 % 2 == 0:
        return disassemble_num(num // 10, even_count + 1, odd_count)
    else:
        return disassemble_num(num // 10, even_count, odd_count + 1)


n = nums_input()
print(f'Количество четных и нечетных цифр в числе равно: {disassemble_num(n)}')
